// Satellite Power System
// consists of modules of 蓄电池，太阳能充电池，充电控制器，放电控制器，分流器
dtmc

// system constants and formulae
// ================
const int thickness;     // 屏蔽层厚度
const double k1 = 100;   // 电离损伤剂量与厚度成反比关系，即d1 = k1/thickness
const double k2 = 0.0039; // 位移损伤剂量与厚度成正比关系，即d = k2 * thickness
formula IEL = k1 / thickness;      // S3R，BCR, BDR所受的电离能损剂量总和
formula NIEL = k2 * thickness;     // 太阳能电池所受的非电离能损剂量总和

// Solar Battery constants, variables, formulae
// =======================
const double pmax_threshold = 0.8; // 太阳能电池要求的最低功率
const double a;                    // parameter of Pmax(dose) of solar battery, leaving to be passed from outside
const double a_mu = 0.1754;        // a的期望值
const double a_sigma = 0.02319029; // a的标准差
const double b = 12;               // pmax公式中的另一个参数
formula d2 = (day / 365.0) * NIEL; // 太阳能电池当前所受的非电离能损剂量
formula cdf_x = (1 - pmax_threshold) / log(1 + d2 * b, e); // a > cdf_x
formula std_cdf_x = (cdf_x - a_mu) / a_sigma;              // 对应到标准正态分布后的x
// compute the cumulative probability density (cdf) of standard normal distribution
// taken from https://www.johndcook.com/blog/cpp_phi/
// ================================================================================
const double a1 =  0.254829592;
const double a2 = -0.284496736;
const double a3 =  1.421413741;
const double a4 = -1.453152027;
const double a5 =  1.061405429;
const double p  =  0.3275911;
const double e = 2.7182818284;
formula sign = std_cdf_x < 0 ? -1 : 1;
formula std_cdf_x_2 = sign * std_cdf_x / pow(2.0, 0.5);
formula t = 1.0/(1.0 + p*std_cdf_x_2);
formula y = 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*pow(e, -std_cdf_x_2 * std_cdf_x_2);
formula solar_battery_fail_prob = 1 - 0.5 * (1.0 + sign * y);  // 根据solar battery所受非电离能损剂量计算出的失效概率
// formula solar_battery_fail_prob = NIEL;
formula solar_battery_fail_rate = solar_battery_fail_prob / (1 - solar_battery_fail_prob);
formula solar_battery_normal_rate = 1;
module TimeYear
	day : [1..1825] init 1; // 5 years
	[incday] day < 1825 -> 1 : (day'=day+1);
endmodule

module SolarBattery
	status: [0..1] init 1; // 太阳能电池所处的状态：1：正常；0：失效
	[incday] status = 1 ->  solar_battery_fail_prob : (status'=0) + (1 - solar_battery_fail_prob) : (status'=1);
endmodule